{"version":3,"sources":["Component/card/card.component.jsx","Component/card-list/card-list.component.jsx","Component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeHolder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","users","json","user","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAAAC,GAAK,OAEjB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAK,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCHdC,EAAW,SAAAR,GAAK,OACvB,qBAAKC,UAAU,YAAf,SACGD,EAAMI,QAAQK,KAAK,SAAAL,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNnBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAQX,UAAU,SAClBY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCCG,E,kDAvCb,aACC,IAAD,8BACE,gBAQJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAPpC,EAAKC,MAAQ,CACbjB,QAAU,GACVc,YAAc,IALhB,E,qDAYF,WACC,IAAD,OACGI,MAAM,8CACLC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,UACnBF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACb,QAAUsB,S,oBAGzC,WAEE,MAAgCC,KAAKN,MAA9BjB,EAAP,EAAOA,QAAUc,EAAjB,EAAiBA,YACXU,EAAkBxB,EAAQyB,QAAQ,SAAAzB,GAAO,OAC7CA,EAAQE,KAAKwB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAgBe,KAAKf,eAExB,cAAC,EAAD,CAAUR,QAAWwB,W,GAnCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.546eb9ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = props => \r\n(\r\n        <div className='card-container'>\r\n        <img alt =\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <h1>{props.monster.email}</h1>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport \"./card-list.styles.css\";\r\n\r\nimport {Card} from \"../card/card.component.jsx\";\r\n\r\nexport const CardList = props => (\r\n      <div className='card-list'>\r\n        {props.monster.map( monster => (\r\n             <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n);  ","import React from 'react';\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({placeHolder, handleChange}) => (\r\n    <input  className='search'\r\n    type=\"search\"\r\n    placeHolder={placeHolder}\r\n    onChange={handleChange} />\r\n);","import React , {Component} from 'react';\nimport './App.css';\nimport {CardList} from './Component/card-list/card-list.component.jsx';\nimport {SearchBox} from './Component/search-box/search-box.component.jsx';\n\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n\n    this.state = {\n    monster : [],\n    searchField : ''\n  }\n};\n\nhandleChange = e => {\n  this.setState({searchField : e.target.value})\n}\ncomponentDidMount()\n{\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(users => users.json())\n    .then(user => this.setState({monster : user}));\n}\n\n  render()\n  {\n    const {monster , searchField} = this.state;\n    const filteredMonster = monster.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())    \n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeHolder='search monster'\n          handleChange = {this.handleChange}\n        />       \n       <CardList monster = {filteredMonster} />       \n       </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}